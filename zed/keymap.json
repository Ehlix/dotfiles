[
  {
    "bindings": {
      "alt-ctrl-h": ["workspace::ActivatePaneInDirection", "Left"],
      "alt-ctrl-j": ["workspace::ActivatePaneInDirection", "Down"],
      "alt-ctrl-k": ["workspace::ActivatePaneInDirection", "Up"],
      "alt-ctrl-l": ["workspace::ActivatePaneInDirection", "Right"],
      //
      "alt-1": "diagnostics::Deploy",
      "alt-4": "terminal_panel::ToggleFocus",
      "ctrl-e": "project_panel::ToggleFocus",
      "alt-h": "pane::ActivatePrevItem",
      "alt-l": "pane::ActivateNextItem",
      "alt-`": "workspace::ToggleZoom",
      "ctrl-j": ["workspace::SendKeystrokes", "down"],
      "ctrl-k": ["workspace::SendKeystrokes", "up"],
      "ctrl-d": "tab_switcher::CloseSelectedItem",
      "shift shift": "command_palette::Toggle"
    }
  },
  // vim motion
  {
    "context": "Editor && VimControl && !VimWaiting && !menu",
    "bindings": {
      // lazygit
      ", g g": [
        "workspace::SendKeystrokes",
        ": new center terminal enter lazygit enter"
      ],
      // swap panels
      "m m h": ["workspace::SwapPaneInDirection", "Left"],
      "m m j": ["workspace::SwapPaneInDirection", "Down"],
      "m m k": ["workspace::SwapPaneInDirection", "Up"],
      "m m l": ["workspace::SwapPaneInDirection", "Right"],
      //
      "shift-l": "vim::EndOfLineDownward",
      "shift-h": "vim::StartOfLineDownward",
      // fast indent
      "shift-j": ["workspace::SendKeystrokes", "5 j"],
      "shift-k": ["workspace::SendKeystrokes", "5 k"],
      //
      "shift-u": "vim::Redo",
      "alt-j": "editor::MoveLineDown",
      "alt-k": "editor::MoveLineUp",
      ",": null,
      ", b d": "pane::CloseActiveItem",
      // code actions
      ", c a": "editor::ToggleCodeActions",
      ", c r": "editor::Rename",
      ", c f": "editor::Format",
      ", c d": "editor::GoToDiagnostic",
      // search actions
      ", f f": "file_finder::Toggle",
      ", f t": "search::FocusSearch",
      //
      ", p": "outline::Toggle",
      "g h": "editor::Hover",
      "g shift-d": "editor::GoToDefinitionSplit",
      "g R": "editor::FindAllReferences",
      "g  b": "vim::SelectNext",
      "g  shift-b": "vim::SelectPrevious"
    }
  },
  {
    "context": "vim_mode == normal",
    "bindings": {
      "d d": "editor::DeleteLine",
      "ctrl-shift-s": "workspace::Save",
      "ctrl-s": ["workspace::SendKeystrokes", "ctrl-shift-s escape"]
    }
  },
  {
    "context": "vim_mode == insert",
    "bindings": {
      "ctrl-shift-s": "workspace::Save",
      "ctrl-s": ["workspace::SendKeystrokes", "ctrl-shift-s escape"]
    }
  },
  {
    "context": "ProjectPanel && not_editing",
    "bindings": {
      "h": "project_panel::CollapseSelectedEntry",
      "l": "project_panel::ExpandSelectedEntry",
      "j": "menu::SelectNext",
      "k": "menu::SelectPrev",
      "o": "menu::Confirm",
      "r": "project_panel::Rename",
      "z c": "project_panel::CollapseSelectedEntry",
      "z o": "project_panel::ExpandSelectedEntry",
      "shift-o": "editor::RevealInFileManager",
      "x": "project_panel::Cut",
      "c": "project_panel::Copy",
      "p": "project_panel::Paste",
      "d": "project_panel::Delete",
      "a": "project_panel::NewFile",
      "f": "project_panel::NewDirectory",
      "shift-y": "project_panel::CopyRelativePath",
      "g y": "project_panel::CopyPath"
    }
  },
  {
    "context": "EmptyPane || SharedScreen",
    "bindings": {
      // Put key bindings here (in addition to the context above) if you want them to
      // work when no editor exists.
      // "space f": "file_finder::Toggle"
    }
  }
]
